[[_getting_a_repo]]
=== Lấy một kho lưu trữ Git(Git Repository) về

Bạn có thể lấy một lưu trữ Git về theo một trong hai cách sau:

1. Bạn có thể biến một thư mục hiện tại trong máy chưa được kiểm soát phiên bản, thành một kho lưu trữ Git, hoặc
2. Bạn có thể _sao chép_ một kho lưu trữ Git từ một nơi khác.

Trong cả hai trường hợp, bạn sẽ có một kho lưu trữ Git trên máy của mình, sẵn sàng để sử dụng.

==== Khởi tạo Kho lưu trữ trong thư mục hiện có

Nếu bạn có một thư mục dự án hiện không được kiểm soát phiên bản và bạn muốn bắt đầu kiểm soát nó bằng Git, trước tiên bạn cần đi đến thư mục của dự án đó.
Nếu bạn chưa bao giờ làm điều này, nó sẽ hơi khác một chút tùy thuộc vào hệ thống bạn đang chạy:

với Linux:
[source,console]
----
$ cd /home/user/my_project
----
với macOS:
[source,console]
----
$ cd /Users/user/my_project
----
với Windows:
[source,console]
----
$ cd C:/Users/user/my_project
----

và gõ lệnh:

[source,console]
----
$ git init
----

Nó sẽ tạo ra một thư mục con mới có tên là `.git` chứa tất cả các tập tin kho lưu trữ cần thiết của bạn -- một khung kho lưu trữ Git.
Từ giờ, Chưa có bất kỳ tập tin nào của bạn được theo dõi, lịch sử chỉnh sửa trống.
Xem <<ch10-git-internals#ch10-git-internals>> để biết thêm thông tin về chính xác những tệp nào được chứa trong thư mục `.git` mà bạn vừa tạo.(((git commands, init)))

Nếu bạn muốn bắt đầu kiểm soát phiên bản các tập tin hiện có(trái ngược với một thư mục trống), bạn có thể nên bắt đầu theo dõi các tập tin đó và thực hiện một commit ban đầu.
Bạn có thể thực hiện điều đó bằng một vài lệnh `git add` chỉ định các tập tin bạn muốn theo dõi, theo sau là `git commit`:

[source,console]
----
$ git add *.c
$ git add LICENSE
$ git commit -m 'Initial project version'
----

Chúng tôi sẽ xem xét những gì các lệnh này thực hiện chỉ sau một phút.
Tại thời điểm này, bạn có một kho lưu trữ Git với các tệp được theo dõi và một commit ban đầu.

[[_git_cloning]]
==== Sao chép một kho lưu trữ hiện có

Nếu bạn muốn lấy một bản sao của kho lưu trữ Git hiện có -- ví dụ: một dự án bạn muốn đóng góp -- thì lệnh bạn cần là `git clone`.
Nếu bạn đã quen với các VCS khác như Subversion, bạn sẽ nhận thấy rằng lệnh là "clone" chứ không phải "checkout".
Đây là một điểm khác biệt quan trọng -- thay vì chỉ nhận được một bản sao đang hoạt động, Git nhận được một bản sao đầy đủ của gần như tất cả dữ liệu mà máy chủ có.
Mọi phiên bản của mọi tệp cho lịch sử của dự án được kéo xuống theo mặc định khi bạn chạy `git clone`.
Trên thực tế, nếu ổ cứng máy chủ của bạn bị hỏng, bạn thường có thể sử dụng gần như bất kỳ bản sao nào trên bất kỳ máy khách nào để đặt máy chủ trở lại trạng thái ban đầu khi nó được sao chép(bạn có thể mất một số phần phía máy chủ, nhưng tất cả dữ liệu được phiên bản sẽ ở đó -- xem <<ch04-git-on-the-server#_getting_git_on_a_server>> để biết thêm chi tiết).

Bạn sao chép một kho lưu trữ với `git clone <url>`.(((git commands, clone)))
Ví dụ: nếu bạn muốn sao chép thư viện có thể liên kết Git được gọi là `libgit2`, bạn có thể làm như sau:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2
----

Nó tạo ra một thư mục có tên là `libgit2`, khởi tạo một thư mục `.git` bên trong thư mục đó, tải xuống tất cả dữ liệu cho kho lưu trữ đó và kiểm tra một bản sao đang hoạt động của phiên bản mới nhất.
Nếu bạn vào thư mục `libgit2` mới vừa được tạo, bạn sẽ thấy các tập tin dự án trong đó, sẵn sàng để làm việc hoặc sử dụng.

Nếu bạn muốn sao chép kho lưu trữ vào một thư mục có tên khác với `libgit2`, bạn có thể chỉ định tên thư mục mới làm đối số bổ sung:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2 mylibgit
----

Lệnh đó thực hiện tương tự như lệnh trước, nhưng thư mục đích được gọi là `mylibgit`.

Git có một số giao thức truyền khác nhau mà bạn có thể sử dụng.
Ví dụ trước sử dụng giao thức `https: //`, nhưng bạn cũng có thể thấy `git://` hoặc `user@server:path/to/repo.git`, sử dụng giao thức truyền SSH.
<<ch04-git-on-the-server#_getting_git_on_a_server>> sẽ giới thiệu tất cả các tùy chọn có sẵn mà máy chủ có thể thiết lập để truy cập kho Git của bạn và ưu nhược điểm của từng tùy chọn.
